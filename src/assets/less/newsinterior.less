/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #why-choose-1479 {
        padding: var(--sectionPadding);
        padding-top: 10rem;

        .cs-container {
            width: 100%;
            /* changes to 1280px at tablet */
            max-width: (584/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-text {
            max-width: (784/16rem);
            font-size: 1.25rem;
            text-align: left;
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            /* 8px - 20px */
            gap: clamp(0.5rem, 2vw, 1.25rem);
        }

        .cs-item {
            list-style: none;
            width: 100%;
            box-sizing: border-box;
            /* 24px - 80px - top and bottom*/
            /* 12px - 60px - Left and right*/
            padding: clamp(1.5rem, 5vw, 5rem) clamp(0.75rem, 1vw, 3.75rem);
            border: 1px solid #e8e8e8;
            background-color: #fff;
            /* 24px - 60px */
            border-radius: clamp(1.5rem, 4vw, 3.75rem);
            grid-column: span 6;
            display: flex;
            flex-direction: column;
            justify-content: center;
            gap: clamp(1rem, 1.7vw, 1.5rem);
            position: relative;
            overflow: hidden;
            transition: border-color 0.3s, background-color 0.3s;

            &:hover {
                border-color: var(--primary);

                .cs-icon {
                    filter: none;
                }

                .cs-graphic {
                    filter: grayscale(0);
                }
            }
        }

        .cs-icon {
            width: auto;
            /* 48px - 60px */
            height: clamp(3rem, 5vw, 3.75rem);
            /* greyscale gets removed on hover, revealing the color of the icon. customise your icons to match your color scheme and the hover effect will work automatically */
            filter: grayscale(1);
            transition: filter 0.3s;
        }

        .cs-h3 {
            font-size: (20/16rem);
            font-weight: 700;
            line-height: 1.2em;
            text-align: center;
            max-width: (185/16rem);
            margin: 0 auto;
            color: var(--headerColor);
        }

        .cs-graphic {
            min-width: (310/16rem);
            width: 100%;
            height: auto;
            filter: grayscale(1);
            display: none;
            position: absolute;
            /* changes to 0 at large desktop */
            bottom: (-35/16rem);
            left: 0;
            transition: filter .3s;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #why-choose-1479 {
        .cs-container {
            max-width: (1280/16rem);
        }

        .cs-item {
            grid-column: span 3;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #why-choose-1479 {
        .cs-graphic {
            display: block;
        }
    }
}

/* Large Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
    #why-choose-1479 {
        .cs-graphic {
            bottom: 0;
        }
    }
}
                                






/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #sbs-578 {
        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 7vw, 4rem);
            padding-top: 5rem;
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (522/16rem);
            /* moved section padding to the .cs-content so we can have the cs-picture be full width on mobile without the padding preventing it from doing so */
            padding: var(--sectionPadding);
            padding-top: 0;
            /* prevents padding from affecting width and height */
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-text {
            margin-bottom: (16/16rem);
            font-size: 1.25rem;
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: "";
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-picture {
            display: block;
            position: relative;
            width: 100%;
            height: (300/16rem);

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #sbs-578 {
        padding: var(--sectionPadding);

        .cs-container {
            flex-direction: row;
            justify-content: flex-start;
            /* 60px - 128px */
            gap: clamp(3.75rem, 10vw, 8rem);
        }

        .cs-content {
            width: 53%;
            /* reset the padding, add the section padding back to the section container */
            padding: 0;
        }

        .cs-picture {
            width: 47vw;
            max-width: (494/16rem);
            /* 518px - 700px */
            height: clamp(32.375rem, 63vw, 43.75rem);
            /* 16px - 28px, added margin left and bottom to cs-picture so it pushes away by the same amount the yellow box element overlaps it left and bottom. This maintains consistent spacing left and bottom */
            margin: 0 0 clamp(1rem, 2.4vw, 1.75rem) clamp(1rem, 2.4vw, 1.75rem);
            position: relative;

            &:before {
                /* yellow box */
                content: "";
                width: 50%;
                height: 60%;
                background: var(--primary);
                opacity: 1;
                display: block;
                position: absolute;
                /* 16px - 28px, wrapped in calc function to multiple by negative 1 and get a negative clamp value */
                bottom: ~"calc(clamp(1rem, 2.4vw, 1.75rem)*-1)";
                left: ~"calc(clamp(1rem, 2.4vw, 1.75rem)*-1)";
            }
        }
    }
}

                                